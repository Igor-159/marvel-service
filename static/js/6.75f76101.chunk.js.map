{"version":3,"sources":["components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","loading","error","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","AppBanner","avengers","avengersLogo","ComicsPage","Helmet","name","content","display","width","height","objectFit","margin","img","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getCharacterByName","res","results","_transformCharacter","getAllCharacters","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices"],"mappings":"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","file":"static/js/6.75f76101.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process){\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService();\n\n\n\n    useEffect(() =>{\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) =>{\n        initial ? setNewItemLoading(false) : setNewItemLoading(true); \n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) =>{\n        let ended = false;\n        if(newComicsList.length < 8){\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) =>{\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`} >\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    \n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading )}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n  \n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () =>{\r\n    return (\r\n        <img style = {{display: 'block', width: '250 px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src = {img}\r\n        alt='Error' />\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n\r\n\r\n    const _apiBase  = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=48ae8219bf78404dac3cb3365c964720';\r\n    const _baseOffset = 210;\r\n\r\n    \r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) =>{\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n    \r\n\r\n    const getCharacter = async (id) =>{\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) =>{\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n       }\r\n    \r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformCharacter = (char) =>{\r\n        return{\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` :'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n\r\n    \r\n        return { getCharacterByName,\r\n                 loading, \r\n                 error, \r\n                 process,\r\n                 setProcess,\r\n                 clearError, \r\n                 getAllCharacters, \r\n                 getCharacter, \r\n                 getAllComics, \r\n                 getComic}\r\n}\r\n\r\n\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback (async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading (false);\r\n            return data;\r\n        }catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n   const clearError = useCallback(() => {\r\n       setError(null);\r\n       setProcess('loading');\r\n    }, []);\r\n   return {loading, request, error, clearError, process, setProcess}\r\n}"],"sourceRoot":""}